name: Docker

on:
  pull_request:
    paths:
      - '.github/workflows/**'
      - '**.go'
      - go.mod
      - go.sum
      - .dockerignore
      - Dockerfile

jobs:
  GitHub:
    name: GitHub Package Registry
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set env vars
        run: |
          echo "::set-env name=USER::$( dirname $GITHUB_REPOSITORY | awk '{print tolower($0)}' )"
          echo "::set-env name=REPO::$( basename $GITHUB_REPOSITORY | awk '{print tolower($0)}' )"
          echo "::set-env name=URL::https://github.com/$( dirname $GITHUB_REPOSITORY | awk '{print tolower($0)}' )/$( basename $GITHUB_REPOSITORY | awk '{print tolower($0)}' )"

      - name: Build
        run: |
          docker build . \
            --tag namer-service:latest \
            --build-arg BUILD_DATE=$(date -u +"%Y-%m-%d") \
            --build-arg VCS_REF=$GITHUB_SHA \
            --build-arg VERSION=$GITHUB_SHA \
            --build-arg VENDOR=$USER \
            --build-arg AUTHOR=$USER \
            --build-arg GIT_REPO=$URL \
            --build-arg DOCUMENTATION=$URL

      - name: Check for available repositories
        id: push_options
        run: |
          if [[ -z "${GITHUB_TOKEN}" ]]; then
            echo "::set-output name=push_to_github_package_registry::false"
          else
            echo "::set-output name=push_to_github_package_registry::true"
          fi

          if [[ -z "${DOCKERHUB_USERNAME}" || -z "${DOCKERHUB_PASSWORD}" ]]; then
            echo "::set-output name=push_to_dockerhub::false"
          else
            echo "::set-output name=push_to_dockerhub::true"
          fi

          if [[ -z "${AWS_ACCESS_KEY_ID}" || -z "${AWS_SECRET_ACCESS_KEY}" || -z "${AWS_ECR_URL}" ]]; then
            echo "::set-output name=push_to_aws_ecr::false"
          else
            echo "::set-output name=push_to_aws_ecr::true"
          fi

      - name: Login to GitHub Package Repository
        if: outputs.push_options.push_to_github_package_registry == true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker login docker.pkg.github.com --username $USER --password $GH_TOKEN

      - name: Tag and push SHA
        if: outputs.push_options.push_to_github_package_registry == true
        run: |
          docker tag namer-service:latest docker.pkg.github.com/$USER/$REPO/namer-service:commit-$GITHUB_SHA
          docker push docker.pkg.github.com/$USER/$REPO/namer-service:commit-$GITHUB_SHA

      - name: Login to Dockerhub
        if: outputs.push_options.push_to_dockerhub == true
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
      
      - name: Tag and push SHA to Dockerhub
        if: outputs.push_options.push_to_dockerhub == true
        run: |
          docker tag namer-service:latest $USER/$REPO:commit-$GITHUB_SHA
          docker push $USER/$REPO:commit-$GITHUB_SHA

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: outputs.push_options.push_to_aws_ecr == true
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and push SHA to ECR
        if: outputs.push_options.push_to_aws_ecr == true
        run: |
          docker tag namer-service:latest ${{ secrets.AWS_ECR_URL }}/namer-service:commit-$GITHUB_SHA
          docker push ${{ secrets.AWS_ECR_URL }}/namer-service:commit-$GITHUB_SHA
